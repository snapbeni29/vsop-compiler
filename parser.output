Grammar

    0 $accept: program $end

    1 program: %empty
    2        | class program

    3 class: "class" "type-identifier" class-parent "{" class-body "}"

    4 class-parent: %empty
    5             | "extends" "type-identifier"

    6 class-body: %empty
    7           | field class-body
    8           | method class-body

    9 field: "object-identifier" ":" type "<-" expr ";"
   10      | "object-identifier" ":" type ";"

   11 assignment: "object-identifier" "<-" expr

   12 method: "object-identifier" "(" formals ")" ":" type block

   13 type: "type-identifier"
   14     | "int32"
   15     | "bool"
   16     | "string"
   17     | "unit"
   18     | "object-identifier"

   19 formals: %empty
   20        | formal

   21 formal: "object-identifier" ":" type formal-supp

   22 formal-supp: %empty
   23            | "," formal

   24 block: "{" expr block-supp "}"

   25 block-supp: %empty
   26           | ";" expr block-supp

   27 expr: "if" expr "then" expr
   28     | "if" expr "then" expr "else" expr
   29     | "while" expr "do" expr
   30     | "let" "object-identifier" ":" type "in" expr
   31     | "let" "object-identifier" ":" type "<-" expr "in" expr
   32     | assignment
   33     | unary-op
   34     | binary-op
   35     | call
   36     | "new" "type-identifier"
   37     | "object-identifier"
   38     | "self"
   39     | literal
   40     | "(" ")"
   41     | "(" expr ")"
   42     | block

   43 literal: "integer-literal"
   44        | "string-literal"
   45        | boolean-literal

   46 boolean-literal: "true"
   47                | "false"

   48 args: %empty
   49     | arg

   50 arg: expr args-supp

   51 args-supp: %empty
   52          | "," arg

   53 call: "object-identifier" "(" args ")"
   54     | expr "." "object-identifier" "(" args ")"

   55 binary-op: expr "=" expr
   56          | expr "<" expr
   57          | expr "<=" expr
   58          | expr "+" expr
   59          | expr "-" expr
   60          | expr "*" expr
   61          | expr "/" expr
   62          | expr "^" expr
   63          | expr "and" expr

   64 unary-op: "not" expr
   65         | "-" expr
   66         | "isnull" expr


Terminals, with rules where they appear

$end (0) 0
error (256)
"class" (258) 3
"and" (259) 63
"bool" (260) 15
"do" (261) 29
"if" (262) 27 28
"else" (263) 28
"then" (264) 27 28
"extends" (265) 5
"false" (266) 47
"in" (267) 30 31
"int32" (268) 14
"isnull" (269) 66
"let" (270) 30 31
"new" (271) 36
"not" (272) 64
"self" (273) 38
"string" (274) 16
"true" (275) 46
"unit" (276) 17
"while" (277) 29
"{" (278) 3 24
"}" (279) 3 24
"(" (280) 12 40 41 53 54
")" (281) 12 40 41 53 54
":" (282) 9 10 12 21 30 31
";" (283) 9 10 26
"," (284) 23 52
"+" (285) 58
"-" (286) 59 65
"*" (287) 60
"/" (288) 61
"^" (289) 62
"." (290) 54
"=" (291) 55
"<" (292) 56
"<=" (293) 57
"<-" (294) 9 11 31
"integer-literal" (295) 43
"string-literal" (296) 44
"type-identifier" (297) 3 5 13 36
"object-identifier" (298) 9 10 11 12 18 21 30 31 37 53 54


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
class (45)
    on left: 3, on right: 2
class-parent (46)
    on left: 4 5, on right: 3
type (47)
    on left: 13 14 15 16 17 18, on right: 9 10 12 21 30 31
class-body (48)
    on left: 6 7 8, on right: 3 7 8
field (49)
    on left: 9 10, on right: 7
method (50)
    on left: 12, on right: 8
formals (51)
    on left: 19 20, on right: 12
formal (52)
    on left: 21, on right: 20 23
formal-supp (53)
    on left: 22 23, on right: 21
block (54)
    on left: 24, on right: 12 42
block-supp (55)
    on left: 25 26, on right: 24 26
args (56)
    on left: 48 49, on right: 53 54
arg (57)
    on left: 50, on right: 49 52
args-supp (58)
    on left: 51 52, on right: 50
expr (59)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right:
    9 11 24 26 27 28 29 30 31 41 50 54 55 56 57 58 59 60 61 62 63 64
    65 66
literal (60)
    on left: 43 44 45, on right: 39
boolean-literal (61)
    on left: 46 47, on right: 45
unary-op (62)
    on left: 64 65 66, on right: 33
binary-op (63)
    on left: 55 56 57 58 59 60 61 62 63, on right: 34
call (64)
    on left: 53 54, on right: 35
assignment (65)
    on left: 11, on right: 32
program (66)
    on left: 1 2, on right: 0 2


State 0

    0 $accept: . program $end

    "class"  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class    go to state 2
    program  go to state 3


State 1

    3 class: "class" . "type-identifier" class-parent "{" class-body "}"

    "type-identifier"  shift, and go to state 4


State 2

    2 program: class . program

    "class"  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class    go to state 2
    program  go to state 5


State 3

    0 $accept: program . $end

    $end  shift, and go to state 6


State 4

    3 class: "class" "type-identifier" . class-parent "{" class-body "}"

    "extends"  shift, and go to state 7

    $default  reduce using rule 4 (class-parent)

    class-parent  go to state 8


State 5

    2 program: class program .

    $default  reduce using rule 2 (program)


State 6

    0 $accept: program $end .

    $default  accept


State 7

    5 class-parent: "extends" . "type-identifier"

    "type-identifier"  shift, and go to state 9


State 8

    3 class: "class" "type-identifier" class-parent . "{" class-body "}"

    "{"  shift, and go to state 10


State 9

    5 class-parent: "extends" "type-identifier" .

    $default  reduce using rule 5 (class-parent)


State 10

    3 class: "class" "type-identifier" class-parent "{" . class-body "}"

    "object-identifier"  shift, and go to state 11

    $default  reduce using rule 6 (class-body)

    class-body  go to state 12
    field       go to state 13
    method      go to state 14


State 11

    9 field: "object-identifier" . ":" type "<-" expr ";"
   10      | "object-identifier" . ":" type ";"
   12 method: "object-identifier" . "(" formals ")" ":" type block

    "("  shift, and go to state 15
    ":"  shift, and go to state 16


State 12

    3 class: "class" "type-identifier" class-parent "{" class-body . "}"

    "}"  shift, and go to state 17


State 13

    7 class-body: field . class-body

    "object-identifier"  shift, and go to state 11

    $default  reduce using rule 6 (class-body)

    class-body  go to state 18
    field       go to state 13
    method      go to state 14


State 14

    8 class-body: method . class-body

    "object-identifier"  shift, and go to state 11

    $default  reduce using rule 6 (class-body)

    class-body  go to state 19
    field       go to state 13
    method      go to state 14


State 15

   12 method: "object-identifier" "(" . formals ")" ":" type block

    "object-identifier"  shift, and go to state 20

    $default  reduce using rule 19 (formals)

    formals  go to state 21
    formal   go to state 22


State 16

    9 field: "object-identifier" ":" . type "<-" expr ";"
   10      | "object-identifier" ":" . type ";"

    "bool"               shift, and go to state 23
    "int32"              shift, and go to state 24
    "string"             shift, and go to state 25
    "unit"               shift, and go to state 26
    "type-identifier"    shift, and go to state 27
    "object-identifier"  shift, and go to state 28

    type  go to state 29


State 17

    3 class: "class" "type-identifier" class-parent "{" class-body "}" .

    $default  reduce using rule 3 (class)


State 18

    7 class-body: field class-body .

    $default  reduce using rule 7 (class-body)


State 19

    8 class-body: method class-body .

    $default  reduce using rule 8 (class-body)


State 20

   21 formal: "object-identifier" . ":" type formal-supp

    ":"  shift, and go to state 30


State 21

   12 method: "object-identifier" "(" formals . ")" ":" type block

    ")"  shift, and go to state 31


State 22

   20 formals: formal .

    $default  reduce using rule 20 (formals)


State 23

   15 type: "bool" .

    $default  reduce using rule 15 (type)


State 24

   14 type: "int32" .

    $default  reduce using rule 14 (type)


State 25

   16 type: "string" .

    $default  reduce using rule 16 (type)


State 26

   17 type: "unit" .

    $default  reduce using rule 17 (type)


State 27

   13 type: "type-identifier" .

    $default  reduce using rule 13 (type)


State 28

   18 type: "object-identifier" .

    $default  reduce using rule 18 (type)


State 29

    9 field: "object-identifier" ":" type . "<-" expr ";"
   10      | "object-identifier" ":" type . ";"

    ";"   shift, and go to state 32
    "<-"  shift, and go to state 33


State 30

   21 formal: "object-identifier" ":" . type formal-supp

    "bool"               shift, and go to state 23
    "int32"              shift, and go to state 24
    "string"             shift, and go to state 25
    "unit"               shift, and go to state 26
    "type-identifier"    shift, and go to state 27
    "object-identifier"  shift, and go to state 28

    type  go to state 34


State 31

   12 method: "object-identifier" "(" formals ")" . ":" type block

    ":"  shift, and go to state 35


State 32

   10 field: "object-identifier" ":" type ";" .

    $default  reduce using rule 10 (field)


State 33

    9 field: "object-identifier" ":" type "<-" . expr ";"

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 52
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 34

   21 formal: "object-identifier" ":" type . formal-supp

    ","  shift, and go to state 59

    $default  reduce using rule 22 (formal-supp)

    formal-supp  go to state 60


State 35

   12 method: "object-identifier" "(" formals ")" ":" . type block

    "bool"               shift, and go to state 23
    "int32"              shift, and go to state 24
    "string"             shift, and go to state 25
    "unit"               shift, and go to state 26
    "type-identifier"    shift, and go to state 27
    "object-identifier"  shift, and go to state 28

    type  go to state 61


State 36

   27 expr: "if" . expr "then" expr
   28     | "if" . expr "then" expr "else" expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 62
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 37

   47 boolean-literal: "false" .

    $default  reduce using rule 47 (boolean-literal)


State 38

   66 unary-op: "isnull" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 63
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 39

   30 expr: "let" . "object-identifier" ":" type "in" expr
   31     | "let" . "object-identifier" ":" type "<-" expr "in" expr

    "object-identifier"  shift, and go to state 64


State 40

   36 expr: "new" . "type-identifier"

    "type-identifier"  shift, and go to state 65


State 41

   64 unary-op: "not" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 66
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 42

   38 expr: "self" .

    $default  reduce using rule 38 (expr)


State 43

   46 boolean-literal: "true" .

    $default  reduce using rule 46 (boolean-literal)


State 44

   29 expr: "while" . expr "do" expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 67
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 45

   24 block: "{" . expr block-supp "}"

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 68
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 46

   40 expr: "(" . ")"
   41     | "(" . expr ")"

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    ")"                  shift, and go to state 69
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 70
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 47

   65 unary-op: "-" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 71
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 48

   43 literal: "integer-literal" .

    $default  reduce using rule 43 (literal)


State 49

   44 literal: "string-literal" .

    $default  reduce using rule 44 (literal)


State 50

   11 assignment: "object-identifier" . "<-" expr
   37 expr: "object-identifier" .
   53 call: "object-identifier" . "(" args ")"

    "("   shift, and go to state 72
    "<-"  shift, and go to state 73

    $default  reduce using rule 37 (expr)


State 51

   42 expr: block .

    $default  reduce using rule 42 (expr)


State 52

    9 field: "object-identifier" ":" type "<-" expr . ";"
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    ";"    shift, and go to state 75
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84


State 53

   39 expr: literal .

    $default  reduce using rule 39 (expr)


State 54

   45 literal: boolean-literal .

    $default  reduce using rule 45 (literal)


State 55

   33 expr: unary-op .

    $default  reduce using rule 33 (expr)


State 56

   34 expr: binary-op .

    $default  reduce using rule 34 (expr)


State 57

   35 expr: call .

    $default  reduce using rule 35 (expr)


State 58

   32 expr: assignment .

    $default  reduce using rule 32 (expr)


State 59

   23 formal-supp: "," . formal

    "object-identifier"  shift, and go to state 20

    formal  go to state 85


State 60

   21 formal: "object-identifier" ":" type formal-supp .

    $default  reduce using rule 21 (formal)


State 61

   12 method: "object-identifier" "(" formals ")" ":" type . block

    "{"  shift, and go to state 45

    block  go to state 86


State 62

   27 expr: "if" expr . "then" expr
   28     | "if" expr . "then" expr "else" expr
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"   shift, and go to state 74
    "then"  shift, and go to state 87
    "+"     shift, and go to state 76
    "-"     shift, and go to state 77
    "*"     shift, and go to state 78
    "/"     shift, and go to state 79
    "^"     shift, and go to state 80
    "."     shift, and go to state 81
    "="     shift, and go to state 82
    "<"     shift, and go to state 83
    "<="    shift, and go to state 84


State 63

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr
   66 unary-op: "isnull" expr .

    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    $default  reduce using rule 66 (unary-op)


State 64

   30 expr: "let" "object-identifier" . ":" type "in" expr
   31     | "let" "object-identifier" . ":" type "<-" expr "in" expr

    ":"  shift, and go to state 88


State 65

   36 expr: "new" "type-identifier" .

    $default  reduce using rule 36 (expr)


State 66

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr
   64 unary-op: "not" expr .

    "+"   shift, and go to state 76
    "-"   shift, and go to state 77
    "*"   shift, and go to state 78
    "/"   shift, and go to state 79
    "^"   shift, and go to state 80
    "."   shift, and go to state 81
    "="   shift, and go to state 82
    "<"   shift, and go to state 83
    "<="  shift, and go to state 84

    $default  reduce using rule 64 (unary-op)


State 67

   29 expr: "while" expr . "do" expr
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    "do"   shift, and go to state 89
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84


State 68

   24 block: "{" expr . block-supp "}"
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    ";"    shift, and go to state 90
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 25 (block-supp)

    block-supp  go to state 91


State 69

   40 expr: "(" ")" .

    $default  reduce using rule 40 (expr)


State 70

   41 expr: "(" expr . ")"
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    ")"    shift, and go to state 92
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84


State 71

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr
   65 unary-op: "-" expr .

    "*"  shift, and go to state 78
    "/"  shift, and go to state 79
    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    $default  reduce using rule 65 (unary-op)


State 72

   53 call: "object-identifier" "(" . args ")"

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    $default  reduce using rule 48 (args)

    block            go to state 51
    args             go to state 93
    arg              go to state 94
    expr             go to state 95
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 73

   11 assignment: "object-identifier" "<-" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 96
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 74

   63 binary-op: expr "and" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 97
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 75

    9 field: "object-identifier" ":" type "<-" expr ";" .

    $default  reduce using rule 9 (field)


State 76

   58 binary-op: expr "+" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 98
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 77

   59 binary-op: expr "-" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 99
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 78

   60 binary-op: expr "*" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 100
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 79

   61 binary-op: expr "/" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 101
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 80

   62 binary-op: expr "^" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 102
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 81

   54 call: expr "." . "object-identifier" "(" args ")"

    "object-identifier"  shift, and go to state 103


State 82

   55 binary-op: expr "=" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 104
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 83

   56 binary-op: expr "<" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 105
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 84

   57 binary-op: expr "<=" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 106
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 85

   23 formal-supp: "," formal .

    $default  reduce using rule 23 (formal-supp)


State 86

   12 method: "object-identifier" "(" formals ")" ":" type block .

    $default  reduce using rule 12 (method)


State 87

   27 expr: "if" expr "then" . expr
   28     | "if" expr "then" . expr "else" expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 107
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 88

   30 expr: "let" "object-identifier" ":" . type "in" expr
   31     | "let" "object-identifier" ":" . type "<-" expr "in" expr

    "bool"               shift, and go to state 23
    "int32"              shift, and go to state 24
    "string"             shift, and go to state 25
    "unit"               shift, and go to state 26
    "type-identifier"    shift, and go to state 27
    "object-identifier"  shift, and go to state 28

    type  go to state 108


State 89

   29 expr: "while" expr "do" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 109
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 90

   26 block-supp: ";" . expr block-supp

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 110
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 91

   24 block: "{" expr block-supp . "}"

    "}"  shift, and go to state 111


State 92

   41 expr: "(" expr ")" .

    $default  reduce using rule 41 (expr)


State 93

   53 call: "object-identifier" "(" args . ")"

    ")"  shift, and go to state 112


State 94

   49 args: arg .

    $default  reduce using rule 49 (args)


State 95

   50 arg: expr . args-supp
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    ","    shift, and go to state 113
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 51 (args-supp)

    args-supp  go to state 114


State 96

   11 assignment: "object-identifier" "<-" expr .
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 11 (assignment)


State 97

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr
   63          | expr "and" expr .

    "+"   shift, and go to state 76
    "-"   shift, and go to state 77
    "*"   shift, and go to state 78
    "/"   shift, and go to state 79
    "^"   shift, and go to state 80
    "."   shift, and go to state 81
    "="   shift, and go to state 82
    "<"   shift, and go to state 83
    "<="  shift, and go to state 84

    $default  reduce using rule 63 (binary-op)


State 98

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   58          | expr "+" expr .
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "*"  shift, and go to state 78
    "/"  shift, and go to state 79
    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    $default  reduce using rule 58 (binary-op)


State 99

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   59          | expr "-" expr .
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "*"  shift, and go to state 78
    "/"  shift, and go to state 79
    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    $default  reduce using rule 59 (binary-op)


State 100

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   60          | expr "*" expr .
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    $default  reduce using rule 60 (binary-op)


State 101

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   61          | expr "/" expr .
   62          | expr . "^" expr
   63          | expr . "and" expr

    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    $default  reduce using rule 61 (binary-op)


State 102

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   62          | expr "^" expr .
   63          | expr . "and" expr

    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    $default  reduce using rule 62 (binary-op)


State 103

   54 call: expr "." "object-identifier" . "(" args ")"

    "("  shift, and go to state 115


State 104

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   55          | expr "=" expr .
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "+"  shift, and go to state 76
    "-"  shift, and go to state 77
    "*"  shift, and go to state 78
    "/"  shift, and go to state 79
    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    "="   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)

    $default  reduce using rule 55 (binary-op)


State 105

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   56          | expr "<" expr .
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "+"  shift, and go to state 76
    "-"  shift, and go to state 77
    "*"  shift, and go to state 78
    "/"  shift, and go to state 79
    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    "="   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)

    $default  reduce using rule 56 (binary-op)


State 106

   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   57          | expr "<=" expr .
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "+"  shift, and go to state 76
    "-"  shift, and go to state 77
    "*"  shift, and go to state 78
    "/"  shift, and go to state 79
    "^"  shift, and go to state 80
    "."  shift, and go to state 81

    "="   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)

    $default  reduce using rule 57 (binary-op)


State 107

   27 expr: "if" expr "then" expr .
   28     | "if" expr "then" expr . "else" expr
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"   shift, and go to state 74
    "else"  shift, and go to state 116
    "+"     shift, and go to state 76
    "-"     shift, and go to state 77
    "*"     shift, and go to state 78
    "/"     shift, and go to state 79
    "^"     shift, and go to state 80
    "."     shift, and go to state 81
    "="     shift, and go to state 82
    "<"     shift, and go to state 83
    "<="    shift, and go to state 84

    $default  reduce using rule 27 (expr)


State 108

   30 expr: "let" "object-identifier" ":" type . "in" expr
   31     | "let" "object-identifier" ":" type . "<-" expr "in" expr

    "in"  shift, and go to state 117
    "<-"  shift, and go to state 118


State 109

   29 expr: "while" expr "do" expr .
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 29 (expr)


State 110

   26 block-supp: ";" expr . block-supp
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    ";"    shift, and go to state 90
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 25 (block-supp)

    block-supp  go to state 119


State 111

   24 block: "{" expr block-supp "}" .

    $default  reduce using rule 24 (block)


State 112

   53 call: "object-identifier" "(" args ")" .

    $default  reduce using rule 53 (call)


State 113

   52 args-supp: "," . arg

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    arg              go to state 120
    expr             go to state 95
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 114

   50 arg: expr args-supp .

    $default  reduce using rule 50 (arg)


State 115

   54 call: expr "." "object-identifier" "(" . args ")"

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    $default  reduce using rule 48 (args)

    block            go to state 51
    args             go to state 121
    arg              go to state 94
    expr             go to state 95
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 116

   28 expr: "if" expr "then" expr "else" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 122
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 117

   30 expr: "let" "object-identifier" ":" type "in" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 123
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 118

   31 expr: "let" "object-identifier" ":" type "<-" . expr "in" expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 124
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 119

   26 block-supp: ";" expr block-supp .

    $default  reduce using rule 26 (block-supp)


State 120

   52 args-supp: "," arg .

    $default  reduce using rule 52 (args-supp)


State 121

   54 call: expr "." "object-identifier" "(" args . ")"

    ")"  shift, and go to state 125


State 122

   28 expr: "if" expr "then" expr "else" expr .
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 28 (expr)


State 123

   30 expr: "let" "object-identifier" ":" type "in" expr .
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 30 (expr)


State 124

   31 expr: "let" "object-identifier" ":" type "<-" expr . "in" expr
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    "in"   shift, and go to state 126
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84


State 125

   54 call: expr "." "object-identifier" "(" args ")" .

    $default  reduce using rule 54 (call)


State 126

   31 expr: "let" "object-identifier" ":" type "<-" expr "in" . expr

    "if"                 shift, and go to state 36
    "false"              shift, and go to state 37
    "isnull"             shift, and go to state 38
    "let"                shift, and go to state 39
    "new"                shift, and go to state 40
    "not"                shift, and go to state 41
    "self"               shift, and go to state 42
    "true"               shift, and go to state 43
    "while"              shift, and go to state 44
    "{"                  shift, and go to state 45
    "("                  shift, and go to state 46
    "-"                  shift, and go to state 47
    "integer-literal"    shift, and go to state 48
    "string-literal"     shift, and go to state 49
    "object-identifier"  shift, and go to state 50

    block            go to state 51
    expr             go to state 127
    literal          go to state 53
    boolean-literal  go to state 54
    unary-op         go to state 55
    binary-op        go to state 56
    call             go to state 57
    assignment       go to state 58


State 127

   31 expr: "let" "object-identifier" ":" type "<-" expr "in" expr .
   54 call: expr . "." "object-identifier" "(" args ")"
   55 binary-op: expr . "=" expr
   56          | expr . "<" expr
   57          | expr . "<=" expr
   58          | expr . "+" expr
   59          | expr . "-" expr
   60          | expr . "*" expr
   61          | expr . "/" expr
   62          | expr . "^" expr
   63          | expr . "and" expr

    "and"  shift, and go to state 74
    "+"    shift, and go to state 76
    "-"    shift, and go to state 77
    "*"    shift, and go to state 78
    "/"    shift, and go to state 79
    "^"    shift, and go to state 80
    "."    shift, and go to state 81
    "="    shift, and go to state 82
    "<"    shift, and go to state 83
    "<="   shift, and go to state 84

    $default  reduce using rule 31 (expr)
